{"version":3,"file":"easily-gtm.js.map","sources":["ng://easily-gtm/lib/easily-gtm.service.ts","ng://easily-gtm/lib/easily-gtm.component.ts","ng://easily-gtm/lib/easily-gtm.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n/**\n * Simple Google Tag Manager Service\n *\n * This service generate a script tag and\n * set trigger a custom events\n *\n * @example\n * import { EasilyGtmService } from 'easily-gtm';\n *\n * constructor(private egtm: EasilyGtmService) {}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EasilyGtmService {\n\n  private dataLayer = window['dataLayer'] || [];\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * Generate script tag and no script tag\n   * @param gtmId String code\n   */\n  static generate(gtmId: string) {\n    const scriptTagManager = document.createElement('script');\n    const noScriptTagManager = document.createElement('noscript');\n    const iframeTagManager = document.createElement('iframe');\n\n    scriptTagManager.innerHTML = `(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n      })(window,document,'script','dataLayer','${gtmId}');`;\n\n    iframeTagManager.src = `https://www.googletagmanager.com/ns.html?id=${gtmId}`;\n    iframeTagManager.height = '0';\n    iframeTagManager.width = '0';\n    iframeTagManager.setAttribute('style', 'display:none;visibility:hidden');\n\n    noScriptTagManager.appendChild(iframeTagManager);\n    document.body.appendChild(noScriptTagManager);\n    document.head.appendChild(scriptTagManager);\n  }\n\n  /**\n   * Push values on dataLayer\n   * @param event reveive a GTM event\n   * @param params receive all params, this object is optional\n   */\n  push(event: string, params?: object) {\n    const obj = {\n      'event': event\n    };\n\n    if (params !== undefined) {\n      Object.entries(params).forEach(([key, value]) => {\n        obj[key] = value;\n      });\n    }\n\n    this.dataLayer.push(obj);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-easily-gtm',\n  template: `\n    <p>\n      easily-gtm works!\n    </p>\n  `,\n  styles: []\n})\nexport class SimpleGtmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SimpleGtmComponent } from './easily-gtm.component';\n\n@NgModule({\n  declarations: [SimpleGtmComponent],\n  imports: [\n  ],\n  exports: [SimpleGtmComponent]\n})\nexport class SimpleGtmModule { }\n"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;AAgBA,MAAa,gBAAgB;;;;IAO3B;QALQ,cAAS,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;KAK7B;;;;;;IAMjB,OAAO,QAAQ,CAAC,KAAa;;cACrB,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;;cACnD,kBAAkB,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC;;cACvD,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;QAEzD,gBAAgB,CAAC,SAAS,GAAG;;;;iDAIgB,KAAK,KAAK,CAAC;QAExD,gBAAgB,CAAC,GAAG,GAAG,+CAA+C,KAAK,EAAE,CAAC;QAC9E,gBAAgB,CAAC,MAAM,GAAG,GAAG,CAAC;QAC9B,gBAAgB,CAAC,KAAK,GAAG,GAAG,CAAC;QAC7B,gBAAgB,CAAC,YAAY,CAAC,OAAO,EAAE,gCAAgC,CAAC,CAAC;QAEzE,kBAAkB,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QACjD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;QAC9C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;KAC7C;;;;;;;IAOD,IAAI,CAAC,KAAa,EAAE,MAAe;;cAC3B,GAAG,GAAG;YACV,OAAO,EAAE,KAAK;SACf;QAED,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO;;;;YAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC;gBAC1C,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;aAClB,EAAC,CAAC;SACJ;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC1B;;;YAtDF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;ACfD,MAWa,kBAAkB;IAE7B,iBAAiB;;;;IAEjB,QAAQ;KACP;;;YAdF,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE;;;;GAIT;aAEF;;;;;;;;;ACVD,MASa,eAAe;;;YAN3B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,kBAAkB,CAAC;gBAClC,OAAO,EAAE,EACR;gBACD,OAAO,EAAE,CAAC,kBAAkB,CAAC;aAC9B;;;;;;;;;;;;;;;"}
